{"success": true, "data": {"id": 9, "name": "Invisible Ink", "value": 700, "description": "Welcome to the **Invisible Ink Challenge**! In this challenge, you'll uncover a hidden message concealed within a seemingly normal text file using Unicode-based steganography. This exercise will test your ability to analyze hidden characters and decode their meaning.  \n\n---\n\n## **Challenge Description**  \n\nYou are provided with a text file (`suspicious_text.txt`) that appears normal at first glance. However, embedded within the text are hidden Unicode characters that encode a secret message. Your goal is to detect and decode these characters to retrieve the hidden flag.  \n\n---\n\n## **Getting Started**  \n\n### **Provided File**  \n- `suspicious_text.txt` (Download from the challenge portal)  \n\n---\n\n## **Goal**  \n\n- Your objective is to:  \n  1. Identify the hidden Unicode characters within the text file.  \n  2. Determine the encoding pattern used to represent the flag.  \n  3. Decode the hidden message to reveal the flag in the format:  \n    ```\n    wecehacksctf{...}\n    ```\n\n---\n\n## **Hints**  \n\n1. **Zero-Width Characters**  \n  - The flag is hidden using **zero-width Unicode characters** such as:  \n    - `\\u200B` (Zero-width space)  \n    - `\\u200C` (Zero-width non-joiner)  \n    - `\\u200D` (Zero-width joiner)  \n\n2. **Binary Encoding**  \n  - These characters might represent binary digits (`0` and `1`), forming an encoded message.  \n\n3. **Detecting Hidden Characters**  \n  - Copy-pasting the text into a Unicode-aware viewer or using `repr(text)` in Python might reveal the presence of unusual characters.  \n\n---\n\n## **Steps to Solve the Challenge**  \n\n1. **Read the File**  \n  - Open the `suspicious_text.txt` file and extract its contents.  \n    ```python\n    with open(\"suspicious_text.txt\", \"r\", encoding=\"utf-8\") as f:\n        text = f.read()\n    ```\n\n2. **Extract Zero-Width Characters**  \n\n3. **Map Characters to Binary**  \n\n4. **Convert Binary to Text**  \n\n---\n\n## **Challenge Completion**  \n\nOnce you successfully decode the message, you will obtain the flag in the format:  \n\nwecehacksctf{FLAG}\n\n\nGood luck, and enjoy the challenge! \ud83d\ude80  \n\n---\n\n## **Resources**  \n\n- [Unicode Zero-Width Characters](https://www.unicode.org/charts/)  \n- [Steganography with Unicode](https://en.wikipedia.org/wiki/Steganography)  \n- [Binary-to-Text Conversion](https://www.asciitable.com/)  \n", "connection_info": null, "next_id": null, "category": "OSINT", "state": "visible", "max_attempts": 0, "type": "standard", "type_data": {"id": "standard", "name": "standard", "templates": {"create": "/plugins/challenges/assets/create.html", "update": "/plugins/challenges/assets/update.html", "view": "/plugins/challenges/assets/view.html"}, "scripts": {"create": "/plugins/challenges/assets/create.js", "update": "/plugins/challenges/assets/update.js", "view": "/plugins/challenges/assets/view.js"}}, "solves": 3, "solved_by_me": false, "attempts": 0, "files": ["/files/00e20995aa780782da496b00d1dded56/suspicious_text.txt"], "tags": [], "hints": [], "view": "<div :class=\"getStyles()\" role=\"document\" x-data=\"Challenge\" x-init=\"id = 9; max_attempts = 0; attempts = 0\">\n  <div class=\"modal-content\">\n    <div class=\"modal-body py-4 px-4 px-sm-5\">\n\n      <div>\n        <button type=\"button\" class=\"btn-close float-end\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n\n        <ul class=\"nav nav-tabs\">\n          <li class=\"nav-item\">\n            <button class=\"nav-link active\" data-bs-target=\"#challenge\" @click=\"showChallenge()\">\n              Challenge\n            </button>\n          </li>\n\n          \n            <li class=\"nav-item\">\n              <button class=\"nav-link challenge-solves\" data-bs-target=\"#solves\" @click=\"showSolves()\">\n                \n                  3 Solves\n                \n              </button>\n            </li>\n          \n        </ul>\n      </div>\n\n      <div>\n        <div class=\"tab-content\">\n          <div role=\"tabpanel\" class=\"tab-pane fade show active\" id=\"challenge\">\n            <h2 class=\"challenge-name text-center pt-3\">\n              Invisible Ink\n            </h2>\n            <h3 class=\"challenge-value text-center\">\n              700\n            </h3>\n\n\n            \n\n            <span class=\"challenge-desc\"><p>Welcome to the <strong>Invisible Ink Challenge</strong>! In this challenge, you'll uncover a hidden message concealed within a seemingly normal text file using Unicode-based steganography. This exercise will test your ability to analyze hidden characters and decode their meaning.</p>\n<hr />\n<h2><strong>Challenge Description</strong></h2>\n<p>You are provided with a text file (<code>suspicious_text.txt</code>) that appears normal at first glance. However, embedded within the text are hidden Unicode characters that encode a secret message. Your goal is to detect and decode these characters to retrieve the hidden flag.</p>\n<hr />\n<h2><strong>Getting Started</strong></h2>\n<h3><strong>Provided File</strong></h3>\n<ul>\n<li><code>suspicious_text.txt</code> (Download from the challenge portal)</li>\n</ul>\n<hr />\n<h2><strong>Goal</strong></h2>\n<ul>\n<li>Your objective is to:\n<ol>\n<li>Identify the hidden Unicode characters within the text file.</li>\n<li>Determine the encoding pattern used to represent the flag.</li>\n<li>Decode the hidden message to reveal the flag in the format:</li>\n</ol>\n<pre><code>wecehacksctf{...}\n</code></pre>\n</li>\n</ul>\n<hr />\n<h2><strong>Hints</strong></h2>\n<ol>\n<li><strong>Zero-Width Characters</strong></li>\n</ol>\n<ul>\n<li>The flag is hidden using <strong>zero-width Unicode characters</strong> such as:\n<ul>\n<li><code>\\u200B</code> (Zero-width space)</li>\n<li><code>\\u200C</code> (Zero-width non-joiner)</li>\n<li><code>\\u200D</code> (Zero-width joiner)</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li><strong>Binary Encoding</strong></li>\n</ol>\n<ul>\n<li>These characters might represent binary digits (<code>0</code> and <code>1</code>), forming an encoded message.</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Detecting Hidden Characters</strong></li>\n</ol>\n<ul>\n<li>Copy-pasting the text into a Unicode-aware viewer or using <code>repr(text)</code> in Python might reveal the presence of unusual characters.</li>\n</ul>\n<hr />\n<h2><strong>Steps to Solve the Challenge</strong></h2>\n<ol>\n<li><strong>Read the File</strong></li>\n</ol>\n<ul>\n<li>Open the <code>suspicious_text.txt</code> file and extract its contents.\n<pre><code class=\"language-python\">with open(&quot;suspicious_text.txt&quot;, &quot;r&quot;, encoding=&quot;utf-8&quot;) as f:\n    text = f.read()\n</code></pre>\n</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p><strong>Extract Zero-Width Characters</strong></p>\n</li>\n<li>\n<p><strong>Map Characters to Binary</strong></p>\n</li>\n<li>\n<p><strong>Convert Binary to Text</strong></p>\n</li>\n</ol>\n<hr />\n<h2><strong>Challenge Completion</strong></h2>\n<p>Once you successfully decode the message, you will obtain the flag in the format:</p>\n<p>wecehacksctf{FLAG}</p>\n<p>Good luck, and enjoy the challenge! \ud83d\ude80</p>\n<hr />\n<h2><strong>Resources</strong></h2>\n<ul>\n<li><a href=\"https://www.unicode.org/charts/\">Unicode Zero-Width Characters</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Steganography\">Steganography with Unicode</a></li>\n<li><a href=\"https://www.asciitable.com/\">Binary-to-Text Conversion</a></li>\n</ul>\n</span>\n\n            \n\n            \n\n            \n              <div class=\"row challenge-files text-center pb-3\">\n                \n                  <div class=\"col-md-4 col-sm-4 col-xs-12 file-button-wrapper d-block\">\n                    \n                    \n                    \n                      \n                    \n                    <a\n                        class=\"btn btn-info btn-file mb-1 d-inline-block px-2 w-100 text-truncate\"\n                        href=\"/files/00e20995aa780782da496b00d1dded56/suspicious_text.txt\"\n                        title=\"suspicious_text.txt\"\n                    >\n                      <i class=\"fas fa-download\"></i>\n                      <small>\n                        suspicious_text.txt\n                      </small>\n                    </a>\n                  </div>\n                \n              </div>\n            \n\n            <template x-if=\"max_attempts > 0\">\n              <p class=\"text-center\">\n                <span x-text=\"attempts\"></span>/<span x-text=\"max_attempts\"></span> attempts\n              </p>\n            </template>\n\n            <div class=\"row submit-row\">\n              <div class=\"col-12 col-sm-8\">\n                \n                  <input\n                      id=\"challenge-id\" class=\"challenge-id\" type=\"hidden\"\n                      value=\"9\"\n                  >\n                  <input\n                      id=\"challenge-input\" class=\"challenge-input form-control\"\n                      type=\"text\" name=\"submission\"\n                      @keyup.enter=\"submitChallenge()\"\n                      placeholder=\"Flag\" x-model=\"submission\"\n                  >\n                \n              </div>\n\n              <div class=\"col-12 col-sm-4 mt-3 mt-sm-0 key-submit\">\n                \n                  <button\n                      id=\"challenge-submit\"\n                      class=\"challenge-submit btn btn-outline-secondary w-100 h-100\" type=\"submit\"\n                      @click.debounce.500ms=\"submitChallenge()\"\n                  >\n                    Submit\n                  </button>\n                \n              </div>\n            </div>\n\n            <div class=\"row notification-row\">\n              <div class=\"col-12\">\n                <template x-if=\"response\">\n                  \n                  <div class=\"alert text-center w-100 mt-3\"\n                      :class=\"{\n                        'alert-success': response.data.status == 'correct',\n                        'alert-info': response.data.status == 'already_solved',\n                        'alert-danger': response.data.status == 'incorrect',\n                      }\" role=\"alert\"\n                  >\n                    <strong x-text=\"response.data.message\"></strong>\n                    <div x-show=\"(response.data.status == 'correct' || response.data.status == 'already_solved')\">\n                      <div x-show=\"getNextId()\">\n                        <button @click=\"nextChallenge()\" class=\"btn btn-info mt-3\">\n                          Next Challenge\n                        </button>\n                      </div>\n                      \n                    </div>\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n\n          <div role=\"tabpanel\" class=\"tab-pane fade\" id=\"solves\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <table class=\"table table-striped align-middle text-center\">\n                  <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Date</th>\n                  </tr>\n                  </thead>\n                  <tbody id=\"challenge-solves-names\">\n                  <template x-for=\"solve in solves\">\n                    <tr>\n                      <td>\n                        <a :href=\"solve.account_url\" x-text=\"solve.name\"></a>\n                      </td>\n                      <td x-text=\"solve.date\"></td>\n                    </tr>\n                  </template>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"}}
