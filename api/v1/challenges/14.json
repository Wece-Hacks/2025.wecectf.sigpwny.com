{"success": true, "data": {"id": 14, "name": "Mom's Spaghetti Code", "value": 500, "description": "\nMy mom has this delicious secret recipe she refuses to share with anyone. On her 50th birthday, she finally agreed to give me the recipe book. Unfortunately for me, it looks like it's hidden in this C binary! Do you think you can help me find it? She's pretty into capture-the-flag, so there might be something in it for you too.\n\nYou can run this compiled C binary in a Linux terminal using `./moms_secret_recipe`. If it says `permission denied`, run `chmod +x` to give the file permission to execute on your device.\n\n### Flag Format  \n`wecehacksctf{l33tspeak_text}`  \n\u2705 Example: `wecehacksctf{h15_p4lm5_4r3_5w34ty_kn33k5_w34k_4rm5_4r3_h34vy}` \n\n## Good Luck! \ud83c\udfa4\n", "connection_info": null, "next_id": null, "category": "Reverse Engineering", "state": "visible", "max_attempts": 0, "type": "standard", "type_data": {"id": "standard", "name": "standard", "templates": {"create": "/plugins/challenges/assets/create.html", "update": "/plugins/challenges/assets/update.html", "view": "/plugins/challenges/assets/view.html"}, "scripts": {"create": "/plugins/challenges/assets/create.js", "update": "/plugins/challenges/assets/update.js", "view": "/plugins/challenges/assets/view.js"}}, "solves": 2, "solved_by_me": false, "attempts": 0, "files": ["/files/b46f7194b8d18a38b6591a20cad2e015/moms_secret_recipe"], "tags": [], "hints": [{"id": 366, "cost": 0, "content": "If a variable is created for a program, it will be stored inside the binary even if it's not used."}, {"id": 367, "cost": 0, "content": "You can do this using a decompiler like Ghidra, or you can use a single Linux command!"}, {"id": 368, "cost": 0, "content": "What are some Linux commands that might help us look at the text in a binary?"}], "view": "<div :class=\"getStyles()\" role=\"document\" x-data=\"Challenge\" x-init=\"id = 14; max_attempts = 0; attempts = 0\">\n  <div class=\"modal-content\">\n    <div class=\"modal-body py-4 px-4 px-sm-5\">\n\n      <div>\n        <button type=\"button\" class=\"btn-close float-end\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n\n        <ul class=\"nav nav-tabs\">\n          <li class=\"nav-item\">\n            <button class=\"nav-link active\" data-bs-target=\"#challenge\" @click=\"showChallenge()\">\n              Challenge\n            </button>\n          </li>\n\n          \n            <li class=\"nav-item\">\n              <button class=\"nav-link challenge-solves\" data-bs-target=\"#solves\" @click=\"showSolves()\">\n                \n                  2 Solves\n                \n              </button>\n            </li>\n          \n        </ul>\n      </div>\n\n      <div>\n        <div class=\"tab-content\">\n          <div role=\"tabpanel\" class=\"tab-pane fade show active\" id=\"challenge\">\n            <h2 class=\"challenge-name text-center pt-3\">\n              Mom&#39;s Spaghetti Code\n            </h2>\n            <h3 class=\"challenge-value text-center\">\n              500\n            </h3>\n\n\n            \n\n            <span class=\"challenge-desc\"><p>My mom has this delicious secret recipe she refuses to share with anyone. On her 50th birthday, she finally agreed to give me the recipe book. Unfortunately for me, it looks like it's hidden in this C binary! Do you think you can help me find it? She's pretty into capture-the-flag, so there might be something in it for you too.</p>\n<p>You can run this compiled C binary in a Linux terminal using <code>./moms_secret_recipe</code>. If it says <code>permission denied</code>, run <code>chmod +x</code> to give the file permission to execute on your device.</p>\n<h3>Flag Format</h3>\n<p><code>wecehacksctf{l33tspeak_text}</code><br />\n\u2705 Example: <code>wecehacksctf{h15_p4lm5_4r3_5w34ty_kn33k5_w34k_4rm5_4r3_h34vy}</code></p>\n<h2>Good Luck! \ud83c\udfa4</h2>\n</span>\n\n            \n\n            \n              <div class=\"challenge-hints hint-row row\">\n                <div class=\"col-12 mb-3\">\n                \n                  <div x-data=\"Hint\" x-init=\"id = 366\">\n                    \n                    <details>\n                      <summary>View Hint</summary>\n                      <div><p>If a variable is created for a program, it will be stored inside the binary even if it's not used.</p>\n</div>\n                    </details>\n                    \n                  </div>\n                \n                  <div x-data=\"Hint\" x-init=\"id = 367\">\n                    \n                    <details>\n                      <summary>View Hint</summary>\n                      <div><p>You can do this using a decompiler like Ghidra, or you can use a single Linux command!</p>\n</div>\n                    </details>\n                    \n                  </div>\n                \n                  <div x-data=\"Hint\" x-init=\"id = 368\">\n                    \n                    <details>\n                      <summary>View Hint</summary>\n                      <div><p>What are some Linux commands that might help us look at the text in a binary?</p>\n</div>\n                    </details>\n                    \n                  </div>\n                \n                </div>\n              </div>\n            \n\n            \n              <div class=\"row challenge-files text-center pb-3\">\n                \n                  <div class=\"col-md-4 col-sm-4 col-xs-12 file-button-wrapper d-block\">\n                    \n                    \n                    \n                      \n                    \n                    <a\n                        class=\"btn btn-info btn-file mb-1 d-inline-block px-2 w-100 text-truncate\"\n                        href=\"/files/b46f7194b8d18a38b6591a20cad2e015/moms_secret_recipe\"\n                        title=\"moms_secret_recipe\"\n                    >\n                      <i class=\"fas fa-download\"></i>\n                      <small>\n                        moms_secret_recipe\n                      </small>\n                    </a>\n                  </div>\n                \n              </div>\n            \n\n            <template x-if=\"max_attempts > 0\">\n              <p class=\"text-center\">\n                <span x-text=\"attempts\"></span>/<span x-text=\"max_attempts\"></span> attempts\n              </p>\n            </template>\n\n            <div class=\"row submit-row\">\n              <div class=\"col-12 col-sm-8\">\n                \n                  <input\n                      id=\"challenge-id\" class=\"challenge-id\" type=\"hidden\"\n                      value=\"14\"\n                  >\n                  <input\n                      id=\"challenge-input\" class=\"challenge-input form-control\"\n                      type=\"text\" name=\"submission\"\n                      @keyup.enter=\"submitChallenge()\"\n                      placeholder=\"Flag\" x-model=\"submission\"\n                  >\n                \n              </div>\n\n              <div class=\"col-12 col-sm-4 mt-3 mt-sm-0 key-submit\">\n                \n                  <button\n                      id=\"challenge-submit\"\n                      class=\"challenge-submit btn btn-outline-secondary w-100 h-100\" type=\"submit\"\n                      @click.debounce.500ms=\"submitChallenge()\"\n                  >\n                    Submit\n                  </button>\n                \n              </div>\n            </div>\n\n            <div class=\"row notification-row\">\n              <div class=\"col-12\">\n                <template x-if=\"response\">\n                  \n                  <div class=\"alert text-center w-100 mt-3\"\n                      :class=\"{\n                        'alert-success': response.data.status == 'correct',\n                        'alert-info': response.data.status == 'already_solved',\n                        'alert-danger': response.data.status == 'incorrect',\n                      }\" role=\"alert\"\n                  >\n                    <strong x-text=\"response.data.message\"></strong>\n                    <div x-show=\"(response.data.status == 'correct' || response.data.status == 'already_solved')\">\n                      <div x-show=\"getNextId()\">\n                        <button @click=\"nextChallenge()\" class=\"btn btn-info mt-3\">\n                          Next Challenge\n                        </button>\n                      </div>\n                      \n                    </div>\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n\n          <div role=\"tabpanel\" class=\"tab-pane fade\" id=\"solves\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <table class=\"table table-striped align-middle text-center\">\n                  <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Date</th>\n                  </tr>\n                  </thead>\n                  <tbody id=\"challenge-solves-names\">\n                  <template x-for=\"solve in solves\">\n                    <tr>\n                      <td>\n                        <a :href=\"solve.account_url\" x-text=\"solve.name\"></a>\n                      </td>\n                      <td x-text=\"solve.date\"></td>\n                    </tr>\n                  </template>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"}}
