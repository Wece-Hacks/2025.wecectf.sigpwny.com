{"success": true, "data": {"id": 4, "name": "The Secret Code", "value": 1000, "description": "In this challenge, participants are given an encrypted message and must decipher it using a substitution cipher. A partial mapping of the cipher is provided, which can be used to significantly narrow down the possible decryption keys. Participants must determine the correct decryption by identifying valid English words from a set of possibilities.\n\nIMPORTANT NOTE: none of the characters in the substitution cipher are repeated, each alphabetical character maps to another alphabetical character. Special characters such as \" \" and \"}\" are left unchanged\n\n## Given Data\n\n- **Encrypted Message:** `acbcqzbxnbgt{aja ijd tjdpw mi ncbhcg bjwc}`\n- **Known Flag Prefix:** `wecehacksctf`\n- **Corresponding Encrypted Prefix:** `acbcqzbxnbgt`\n\n## Decryption Approach\n\n1. **Establish a Partial Mapping:**\n\n  - The provided prefix mapping (`acbcqzbxnbgt` \u2192 `wecehacksctf`) helps fix some characters.\n  - Identify the remaining characters that need to be decrypted.\n\n2. **Identify Unmapped Letters:**\n\n  - Determine which letters remain unmapped in the encrypted words.\n  - Use the remaining alphabet letters to fill in these gaps.\n\n3. **Generate Permutations:**\n\n  - Create permutations of the unmapped letters to test all possible decryptions.\n  - Apply each mapping to the encrypted words and check against a dictionary.\n  - HINT: seperate each word into it's own searching algorithm to save computation time. Lowering computational time is a huge aspect of this ctf challenge. \n\n\n4. **Filter Valid Words:**\n\n  - Use an English dictionary to identify valid decrypted words.\n    Hint:\n    ```python\n    import nltk\n    nltk.download('words')\n    from nltk.corpus import words   \n    ```\n    words.words() gives you all the words in the english dictionary\n\n5. **Contextual Deduction:**\n\n  - Based on challenge hints and logical reasoning, guess the most likely words from all the possible outputs\n\n\n## Tools Required\n\n- Python\n- `itertools` for generating permutations\n- `nltk` for English dictionary validation\n\n## Final Notes\n\nThis challenge simulates real-world cryptanalysis where partial knowledge of a cipher can be leveraged to break encryption efficiently. Participants are encouraged to refine their approach and optimize decryption speed.\n\nHappy Hacking!\n", "connection_info": null, "next_id": null, "category": "Cryptography", "state": "visible", "max_attempts": 0, "type": "standard", "type_data": {"id": "standard", "name": "standard", "templates": {"create": "/plugins/challenges/assets/create.html", "update": "/plugins/challenges/assets/update.html", "view": "/plugins/challenges/assets/view.html"}, "scripts": {"create": "/plugins/challenges/assets/create.js", "update": "/plugins/challenges/assets/update.js", "view": "/plugins/challenges/assets/view.js"}}, "solves": 3, "solved_by_me": false, "attempts": 0, "files": ["/files/5648a5a3a665accf2af77c5f8d3c49c2/main.py"], "tags": [], "hints": [], "view": "<div :class=\"getStyles()\" role=\"document\" x-data=\"Challenge\" x-init=\"id = 4; max_attempts = 0; attempts = 0\">\n  <div class=\"modal-content\">\n    <div class=\"modal-body py-4 px-4 px-sm-5\">\n\n      <div>\n        <button type=\"button\" class=\"btn-close float-end\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n\n        <ul class=\"nav nav-tabs\">\n          <li class=\"nav-item\">\n            <button class=\"nav-link active\" data-bs-target=\"#challenge\" @click=\"showChallenge()\">\n              Challenge\n            </button>\n          </li>\n\n          \n            <li class=\"nav-item\">\n              <button class=\"nav-link challenge-solves\" data-bs-target=\"#solves\" @click=\"showSolves()\">\n                \n                  3 Solves\n                \n              </button>\n            </li>\n          \n        </ul>\n      </div>\n\n      <div>\n        <div class=\"tab-content\">\n          <div role=\"tabpanel\" class=\"tab-pane fade show active\" id=\"challenge\">\n            <h2 class=\"challenge-name text-center pt-3\">\n              The Secret Code\n            </h2>\n            <h3 class=\"challenge-value text-center\">\n              1000\n            </h3>\n\n\n            \n\n            <span class=\"challenge-desc\"><p>In this challenge, participants are given an encrypted message and must decipher it using a substitution cipher. A partial mapping of the cipher is provided, which can be used to significantly narrow down the possible decryption keys. Participants must determine the correct decryption by identifying valid English words from a set of possibilities.</p>\n<p>IMPORTANT NOTE: none of the characters in the substitution cipher are repeated, each alphabetical character maps to another alphabetical character. Special characters such as &quot; &quot; and &quot;}&quot; are left unchanged</p>\n<h2>Given Data</h2>\n<ul>\n<li><strong>Encrypted Message:</strong> <code>acbcqzbxnbgt{aja ijd tjdpw mi ncbhcg bjwc}</code></li>\n<li><strong>Known Flag Prefix:</strong> <code>wecehacksctf</code></li>\n<li><strong>Corresponding Encrypted Prefix:</strong> <code>acbcqzbxnbgt</code></li>\n</ul>\n<h2>Decryption Approach</h2>\n<ol>\n<li><strong>Establish a Partial Mapping:</strong></li>\n</ol>\n<ul>\n<li>The provided prefix mapping (<code>acbcqzbxnbgt</code> \u2192 <code>wecehacksctf</code>) helps fix some characters.</li>\n<li>Identify the remaining characters that need to be decrypted.</li>\n</ul>\n<ol start=\"2\">\n<li><strong>Identify Unmapped Letters:</strong></li>\n</ol>\n<ul>\n<li>Determine which letters remain unmapped in the encrypted words.</li>\n<li>Use the remaining alphabet letters to fill in these gaps.</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Generate Permutations:</strong></li>\n</ol>\n<ul>\n<li>Create permutations of the unmapped letters to test all possible decryptions.</li>\n<li>Apply each mapping to the encrypted words and check against a dictionary.</li>\n<li>HINT: seperate each word into it's own searching algorithm to save computation time. Lowering computational time is a huge aspect of this ctf challenge.</li>\n</ul>\n<ol start=\"4\">\n<li><strong>Filter Valid Words:</strong></li>\n</ol>\n<ul>\n<li>Use an English dictionary to identify valid decrypted words.\nHint:\n<pre><code class=\"language-python\">import nltk\nnltk.download('words')\nfrom nltk.corpus import words   \n</code></pre>\nwords.words() gives you all the words in the english dictionary</li>\n</ul>\n<ol start=\"5\">\n<li><strong>Contextual Deduction:</strong></li>\n</ol>\n<ul>\n<li>Based on challenge hints and logical reasoning, guess the most likely words from all the possible outputs</li>\n</ul>\n<h2>Tools Required</h2>\n<ul>\n<li>Python</li>\n<li><code>itertools</code> for generating permutations</li>\n<li><code>nltk</code> for English dictionary validation</li>\n</ul>\n<h2>Final Notes</h2>\n<p>This challenge simulates real-world cryptanalysis where partial knowledge of a cipher can be leveraged to break encryption efficiently. Participants are encouraged to refine their approach and optimize decryption speed.</p>\n<p>Happy Hacking!</p>\n</span>\n\n            \n\n            \n\n            \n              <div class=\"row challenge-files text-center pb-3\">\n                \n                  <div class=\"col-md-4 col-sm-4 col-xs-12 file-button-wrapper d-block\">\n                    \n                    \n                    \n                      \n                    \n                    <a\n                        class=\"btn btn-info btn-file mb-1 d-inline-block px-2 w-100 text-truncate\"\n                        href=\"/files/5648a5a3a665accf2af77c5f8d3c49c2/main.py\"\n                        title=\"main.py\"\n                    >\n                      <i class=\"fas fa-download\"></i>\n                      <small>\n                        main.py\n                      </small>\n                    </a>\n                  </div>\n                \n              </div>\n            \n\n            <template x-if=\"max_attempts > 0\">\n              <p class=\"text-center\">\n                <span x-text=\"attempts\"></span>/<span x-text=\"max_attempts\"></span> attempts\n              </p>\n            </template>\n\n            <div class=\"row submit-row\">\n              <div class=\"col-12 col-sm-8\">\n                \n                  <input\n                      id=\"challenge-id\" class=\"challenge-id\" type=\"hidden\"\n                      value=\"4\"\n                  >\n                  <input\n                      id=\"challenge-input\" class=\"challenge-input form-control\"\n                      type=\"text\" name=\"submission\"\n                      @keyup.enter=\"submitChallenge()\"\n                      placeholder=\"Flag\" x-model=\"submission\"\n                  >\n                \n              </div>\n\n              <div class=\"col-12 col-sm-4 mt-3 mt-sm-0 key-submit\">\n                \n                  <button\n                      id=\"challenge-submit\"\n                      class=\"challenge-submit btn btn-outline-secondary w-100 h-100\" type=\"submit\"\n                      @click.debounce.500ms=\"submitChallenge()\"\n                  >\n                    Submit\n                  </button>\n                \n              </div>\n            </div>\n\n            <div class=\"row notification-row\">\n              <div class=\"col-12\">\n                <template x-if=\"response\">\n                  \n                  <div class=\"alert text-center w-100 mt-3\"\n                      :class=\"{\n                        'alert-success': response.data.status == 'correct',\n                        'alert-info': response.data.status == 'already_solved',\n                        'alert-danger': response.data.status == 'incorrect',\n                      }\" role=\"alert\"\n                  >\n                    <strong x-text=\"response.data.message\"></strong>\n                    <div x-show=\"(response.data.status == 'correct' || response.data.status == 'already_solved')\">\n                      <div x-show=\"getNextId()\">\n                        <button @click=\"nextChallenge()\" class=\"btn btn-info mt-3\">\n                          Next Challenge\n                        </button>\n                      </div>\n                      \n                    </div>\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n\n          <div role=\"tabpanel\" class=\"tab-pane fade\" id=\"solves\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <table class=\"table table-striped align-middle text-center\">\n                  <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Date</th>\n                  </tr>\n                  </thead>\n                  <tbody id=\"challenge-solves-names\">\n                  <template x-for=\"solve in solves\">\n                    <tr>\n                      <td>\n                        <a :href=\"solve.account_url\" x-text=\"solve.name\"></a>\n                      </td>\n                      <td x-text=\"solve.date\"></td>\n                    </tr>\n                  </template>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"}}
